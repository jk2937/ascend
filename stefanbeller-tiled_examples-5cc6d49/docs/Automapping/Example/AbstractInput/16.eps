%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (16.eps)
%%CreationDate: (2012-02-19T19:15:17+01:00)
%%BoundingBox: -0 -0 73 41
%%HiResBoundingBox: 0 0 72.9899 41
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 73 41
userdict begin
DisplayImage
0 0
72.9899 40.9943
12
73 41
1
1
1
8
808080804080808080808080808080808080808080808080808080808080808080808080
408080808080808080808080808080808080808080808080808080808080808040808080
808080808040808080808080808080808080808080808080808080808080808080808080
804080808080808080808080808080808080808080808080808080808080808080408080
808080808080408080808080808080808080808080808080808080808080808080808080
808040808080808080808080808080808080808080808080808080808080808080804080
808080808080808080808080808080808080808080808080808080808080808080808080
808080808080808080808080808080808080808080808080808080808080808080808080
8080808040404080207F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF
7F7F7FFF3F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF
3F404080408080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFF7F808080808080808080FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFE6B482501E000000FFFFFFFF
FFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF7F808080808080808080FFFFFFFFFFFFFFFFFF0000000000000000FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEE8C401A050F3577CFFFFFFFFF
FFFFFFFFFFFFFFFF808080808080808040FFFFFFFFFFFFFFFFFF194C7FB2E5000000FFFF
FFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFA5130000000000000000FFFFFF
FFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FF
FFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFF920100148DDAF7F3CF852CFFFF
FFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000
FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFC6030024E5FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFF7F808080808080808080FFFFFFFFFFFFFFFFFFFFFFFFFFFF0000
00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2F0001C9FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFF00
0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFC0000044FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFFFF
000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF71000095FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFFFFFFFF
FF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF380000CCDA661F06123F
94F8FFFFFFFFFFFFFFFFFFFFFFFF7F808080808080808080FFFFFFFFFFFFFFFFFFFFFFFF
FFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1900009C0900000000
00002DE1FFFFFFFFFFFFFFFFFFFFFFFF808080808080808040FFFFFFFFFFFFFFFFFFFFFF
FFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF0800000732B9F4F4
B93100002EF8FFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFFFF
FFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF0500002AF4FFFF
FFFFF42A000097FFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFFFFFFFF
FFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF120000A9FFFF
FFFFFFFFA8000042FFFFFFFFFFFFFFFFFFFF7F808080808080808080FFFFFFFFFFFFFFFF
FFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF270000E9FF
FFFFFFFFFFE8000013FFFFFFFFFFFFFFFFFFFFFF808080808080808040FFFFFFFFFFFFFF
FFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF520000FB
FFFFFFFFFFFFFA000005FFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFFFF
FFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF8A0000
E9FFFFFFFFFFFFE8000015FFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFFFFFFFF
FFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFDD00
00A8FFFFFFFFFFFFA7000048FFFFFFFFFFFFFFFFFFFF7F808080808080808080FFFFFFFF
FFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
52002AF5FFFFFFFFF42A0000A5FFFFFFFFFFFFFFFFFFFFFF808080808080808040FFFFFF
FFFFFFFFFFFF00000000000000000000000000FFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF
FFDF130033BAF4F4BA32000043FDFFFFFFFFFFFFFFFFFFFF7F808080808080808040FFFF
FFFFFFFFFFFFFF00000000000000000000000000FFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFF
FFFFFFCA1A0000000000000046EFFFFFFFFFFFFFFFFFFFFFFF7F808080808080808040FF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFF
FFFFFFFFFFF0853411051A50AEFEFFFFFFFFFFFFFFFFFFFFFFFF7F808080808080808080
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8080808080808080
40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F80808080808080
8040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F808080808080
808040FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F8080808080
80808080FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80808080
404040802040408040404080404040804040408040404080404040804040408040404080
204040804040408040404080404040804040408040404080404040804040408020404080
408080808040808080808080808080808080808080808080808080808080808080808080
804080808080808080808080808080808080808080808080808080808080808080408080
808080808080408080808080808080808080808080808080808080808080808080808080
808040808080808080808080808080808080808080808080808080808080808080804080
808080808080808080808080808080808080808080808080808080808080808080808080
808080808080808080808080808080808080808080808080808080808080808080808080
808080808080808040808080808080808080808080808080808080808080808080808080
808080804080808080808080808080808080808080808080808080808080808080808080
4080808080
end
%%PageTrailer
%%Trailer
%%EOF
